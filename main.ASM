NAME MAIN
EXTRN F10T2:NEAR
IF1
	INCLUDE MACRO.LIB
ENDIF
.386
DATA SEGMENT USE16 PARA PUBLIC 'DATA'
BUF DB 8 DUP(0)
ARR DB 32 DUP(0)
ARRS DB 8 DUP(0)		;存放输入的待被查找的二进制数
COUNT DW 0				;统计输入的数量
COUNTLENGTH DW 0		;用作循环计数器
SIGN DB 0				;是否输完标志，1-已输完，0-未输完
SIGN1 DB 0				;标示，若所查找字符在ARR内，则SIGN1——>1，否则为0
THREE DW 0
N EQU 30
SELECT0 DB 0AH,0DH,'---Functions---$'
SELECT1 DB 0AH,0DH,'1,Input the information$'
SELECT2 DB 0AH,0DH,'2,Search in the class$'
SELECT3 DB 0AH,0DH,'$'
SENTENCE1 DB 0AH,0DH,'Please input the number you wannna search:$'
SENTENCE2 DB 0AH,0DH,'The number you input is NOT found$'
NUMBER DB 0AH,0DH,'NUMBER:$'
SCORE DB 0AH,0DH,'SCORE:$'
RANK DB 0AH,0DH,'RANK:$'
OUTBOUNDARYWARNING DB 0AH,0DH,'The number you input is too much.The input function will close$'
DATA ENDS
STACK SEGMENT USE16 PARA PUBLIC 'STACK'
DB 200 DUP(0)
STACK ENDS
CODE SEGMENT USE16 PARA PUBLIC 'CODE'
ASSUME DS:DATA,ES:DATA,CS:CODE,SS:STACK
START:
	MOV AX,DATA
	MOV DS,AX
	MOV ES,AX
	LEA BX,ARR			
	MOV COUNT,0			
	MOV SIGN,0	
RELOOP:	
	WRITE SELECT3
	WRITE SELECT0
	WRITE SELECT1
	WRITE SELECT2
	WRITE SELECT3
SELECT:
	MOV AH,1
	INT 21H	
	CMP AL,'Q'		;输入q则直接退出程序
	JE EXIT
	CMP AL,'q'
	JE EXIT
	CMP AL,'1'
	JE PREBEG
	CMP AL,'2'
	JNE RELOOP		;不是1、2、Q或q，则重新进入选择
	CMP AL,'2'
	JE SEGSEARCH
SEGSEARCH:
	CALL SEARCH
	JMP RELOOP
PREBEG:
	WRITE SELECT3;回车换行
	WRITE SELECT1
	WRITE SELECT3
	JMP BEG
BEG:
	LEA DI,BUF
	MOV CX,0
NEXT0:
	MOV AH,1
	INT 21H			;输入一个字符
	CMP AL,'Q'
	JE EXIT
	CMP AL,'q'
	JE EXIT		
	CMP AL,','
	JE DIGIT		;是逗号，转digit做进制转换
	CMP AL,0DH
	JNE P 			;不是逗号也不是回车，则转P
	INC SIGN		;是回车，则全部输完，标志置1
	JMP DIGIT		;准备调用DIGIT进行进制转换
P:
	STOSB			;将字符送入buf区
	INC CX
	JMP NEXT0		;开始下一个输入
DIGIT:
	LEA SI,BUF
	MOV DX,16
	CALL F10T2
	MOV [BX],AX
	ADD BX,2
	INC COUNT
	CMP COUNT,N
	JAE OUTBOUNDARY
	CMP SIGN,1
	JE OUT2			;已输完，则转out2准备输出
	JMP BEG			;否则，继续输入下一串数字
OUTBOUNDARY:
	WRITE OUTBOUNDARYWARNING
	WRITE SELECT3
	JMP OUT2
OUT2:
	MOV CX,COUNT
	LEA SI,ARR
	MOV DX,16
	
OUT3:
	MOV AX,[SI]
	CALL F2T10
	OUT1 ','
	ADD SI,2
	DEC CX
	CMP CX,0
	JNE OUT3
	JMP RELOOP
	
EXIT:
	MOV AH,4CH
	INT 21H

	F2T10 PROC 
	PUSH EBX
	PUSH SI
	LEA SI,BUF
	CMP DX,32
	JNE B
	MOVSX EAX,AX 
B:	OR EAX,EAX
	JNS PLUS
	NEG EAX
	MOV BYTE PTR [SI],'-'
	INC SI
PLUS:
	MOV EBX,10
	CALL RADIX
	MOV BYTE PTR [SI],'$'
	LEA DX,BUF
	MOV AH,9
	INT 21H
	POP SI
	POP EBX
	RET
	F2T10 ENDP
	
	
RADIX PROC
	PUSH CX
	PUSH EDX
	XOR CX,CX
LOP1:
	XOR EDX,EDX
	DIV EBX
	PUSH DX
	INC CX
	OR EAX,EAX
	JNZ LOP1
LOP2:
	POP AX
	CMP AL,10
	JB L1
	ADD AL,7
L1:	
	ADD AL,30H
	MOV [SI],AL
	INC SI
	LOOP LOP2
	POP EDX
	POP CX
	RET
RADIX ENDP

SEARCH PROC
	MOV AX,DATA
	MOV DS,AX
	MOV ES,AX
	LEA BX,ARRS
	MOV COUNTLENGTH,0
	MOV SIGN1,0
	MOV THREE,3
	WRITE SENTENCE1
		
BEG1:
	LEA DI,BUF
	MOV CX,0		;CX用来记录共输入了多少个数字
NEXT01:
	MOV AH,1
	INT 21H			;输入一个字符
	CMP AL,'Q'
	JE EXIT
	CMP AL,'q'
	JE EXIT
	CMP AL,0DH
	JNE P1 			;不是回车，则转P
	JMP DIGIT1		;准备调用DIGIT进行进制转换
P1:
	STOSB			;将字符送入BUF区
	INC CX
	JMP NEXT01		;开始下一个输入
DIGIT1:
	LEA SI,BUF
	MOV DX,16
	CALL F10T2
	MOV [BX],AX
	JMP BEGSEARCH			;已输完

;输入的一个字符串转化为二进制存储在ARRS中，接下来开始比较

BEGSEARCH:
	LEA SI,ARRS
	MOV AX,[SI]
	LEA DI,ARR
AGAIN:	
	INC COUNTLENGTH
	MOV BX,[DI]
	CMP AX,BX		
	JE OUTPUT1					;相同，则转输出
	ADD DI,2
	MOV DX,COUNTLENGTH
	CMP DX,COUNT	;如果循环次数等于数组长度，则表示数组已经遍历完
	JE EXIT1
	JMP AGAIN
OUTPUT1:
	INC SIGN1
	MOV CX,THREE
	MOV SI,DI
	MOV DX,16
OUTPUT2:
	MOV AX,[SI]
	PUSHA
	CMP CX,3
	JE WRITENUMBER
	CMP CX,2
	JE WRITESCORE
	CMP CX,1
	JE WRITERANK
BACK:
	
	OUT1 9
	POPA
	CALL F2T10
	OUT1 10
	ADD SI,2
	DEC CX
	CMP CX,0
	JNE OUTPUT2
	JMP EXIT1
WRITENUMBER:
	WRITE NUMBER
	JMP BACK
WRITESCORE:
	WRITE SCORE
	JMP BACK
WRITERANK:
	WRITE RANK
	JMP BACK
EXIT1:
	CMP SIGN1,0
	JNE EXIT2
	WRITE SENTENCE2
	JMP EXIT2
EXIT2:
	RET
SEARCH ENDP

CODE ENDS
END START
	
	
	